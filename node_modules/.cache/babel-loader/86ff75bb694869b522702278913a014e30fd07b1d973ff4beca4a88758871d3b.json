{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      url,\n      headers\n    } = _ref;\n    this.url = url;\n    this._headers = headers;\n  }\n  _checkResponse(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Ошибка: ${response.status}`);\n  }\n\n  //отображение данных профиля с сервера\n  getUserInfo() {\n    return fetch(`${this.url}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  editUserInfo(data) {\n    return fetch(`${this.url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._checkResponse);\n  }\n\n  //отображение карточек с сервера\n  getCards() {\n    return fetch(`${this.url}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  addNewCard(data) {\n    return fetch(`${this.url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._checkResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  changeLikeCardStatus(cardId, like) {\n    const methodName = like ? \"PUT\" : \"DELETE\";\n    return fetch(`${this.url}/cards/${cardId}/likes`, {\n      method: methodName,\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  editAvatar(_ref2) {\n    let {\n      avatar\n    } = _ref2;\n    return fetch(`${this.url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: `${avatar}`\n      })\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-52\",\n  headers: {\n    authorization: \"d631afdb-03e9-4312-a4a7-1af0a84b5eb1\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","url","headers","_headers","_checkResponse","response","ok","json","Promise","reject","status","getUserInfo","fetch","method","then","editUserInfo","data","body","JSON","stringify","getCards","addNewCard","deleteCard","cardId","changeLikeCardStatus","like","methodName","editAvatar","avatar","api","authorization"],"sources":["/Users/andrewtitarenko/Desktop/mesto/mesto_react/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor({ url, headers }) {\n    this.url = url;\n    this._headers = headers;\n  }\n\n  _checkResponse(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Ошибка: ${response.status}`);\n  }\n\n  //отображение данных профиля с сервера\n  getUserInfo() {\n    return fetch(`${this.url}/users/me`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  editUserInfo(data) {\n    return fetch(`${this.url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._checkResponse);\n  }\n\n  //отображение карточек с сервера\n  getCards() {\n    return fetch(`${this.url}/cards`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  addNewCard(data) {\n    return fetch(`${this.url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, like) {\n    const methodName = like ? \"PUT\" : \"DELETE\";\n    return fetch(`${this.url}/cards/${cardId}/likes`, {\n      method: methodName,\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  editAvatar({ avatar }) {\n    return fetch(`${this.url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: `${avatar}`,\n      }),\n    }).then(this._checkResponse);\n  }\n}\n\nconst api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-52\",\n  headers: {\n    authorization: \"d631afdb-03e9-4312-a4a7-1af0a84b5eb1\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}